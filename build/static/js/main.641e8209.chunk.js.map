{"version":3,"sources":["UploadImages.js","App.js","reportWebVitals.js","index.js"],"names":["UploadImages","useState","images","setImages","imagesURLs","setImageURLs","useEffect","length","newImageURLs","forEach","image","push","URL","createObjectURL","map","imageSrc","src","alt","className","type","multiple","accept","onChange","e","target","files","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEe,SAASA,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,qBAAU,WACN,KAAIJ,EAAOK,OAAS,GAApB,CACA,IAAMC,EAAe,GACrBN,EAAOO,SAAQ,SAAAC,GAAK,OAAIF,EAAaG,KAAKC,IAAIC,gBAAgBH,OAC9DL,EAAaG,MACd,CAACN,IAOA,oCACME,EAAWU,KAAI,SAAAC,GAAQ,OAAI,yBAAKC,IAAKD,EAAUE,IAAI,mBAAmBC,UAAU,gBAClF,6BAAS,2BAAOC,KAAK,OAAOC,UAAQ,EAACC,OAAO,UAAUC,SAP9D,SAAuBC,GACnBpB,EAAU,YAAIoB,EAAEC,OAAOC,YCEhBC,MAZf,WACE,OACE,yBAAKR,UAAU,OACb,4BAAQA,UAAU,cAChB,2BACE,kBAAClB,EAAD,UCGK2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.641e8209.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function UploadImages() {\n    const [images, setImages] = useState([]);\n    const [imagesURLs, setImageURLs] = useState([]);\n\n    useEffect(() => {\n        if (images.length < 1) return;\n        const newImageURLs = [];\n        images.forEach(image => newImageURLs.push(URL.createObjectURL(image)));\n        setImageURLs(newImageURLs);\n    }, [images]);\n\n    function onImageChange(e) {\n        setImages([...e.target.files]);\n    }\n\n    return (\n        <>\n            { imagesURLs.map(imageSrc => <img src={imageSrc} alt=\"uploaded spinner\" className=\"App-logo\" />) }\n            <br></br><input type=\"file\" multiple accept=\"image/*\" onChange={onImageChange} />\n        </>\n    );\n}","import React from 'react';\nimport './App.css';\nimport UploadImages from './UploadImages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          <UploadImages></UploadImages>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}